.TH "C:/Users/omard/Desktop/Projet_S4_grand_final/couche1/couche1.h" 3 "Lundi 16 Mai 2022" "ScratchOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/omard/Desktop/Projet_S4_grand_final/couche1/couche1.h \- Header des fonctions pour la 1ère couche\&.  

.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./global\&.h'\fP
.br

.SS "Fonctions"

.in +1c
.ti -1c
.RI "void \fBerror\fP (const char *Message, int code_erreur)"
.br
.RI "Fonction fusionnant perror et exit\&. "
.ti -1c
.RI "void \fBinit_disk_sos\fP (\fBvirtual_disk_t\fP *virtual_disk)"
.br
.RI "Initialisation du disque : ouverture du fichier d0 et création des valeurs dans le superblock\&. "
.ti -1c
.RI "unsigned int \fBcompute_nblock\fP (unsigned int nb_byte, int block_size)"
.br
.RI "Calcule le nombre de block à créer selon la taille du fichier et la taille d'un block\&. "
.ti -1c
.RI "void \fBwrite_block\fP (\fBblock_t\fP block, unsigned int pos, FILE *file)"
.br
.RI "Ecrit dans le fichier 'file' le block à la position pos\&. "
.ti -1c
.RI "\fBblock_t\fP \fBread_block\fP (unsigned int pos, FILE *file)"
.br
.RI "Lit dans le fichier 'file' le block à la position pos\&. "
.ti -1c
.RI "void \fBprint_block\fP (\fBblock_t\fP block)"
.br
.RI "Affichage en hex sur le stdout du contenu du block\&. "
.ti -1c
.RI "void \fBajuster_message\fP (unsigned char *message)"
.br
.RI "Concatenation du message par des espace jusqu'à ce que la taille du fichier atteigne un multiple de BLOCK_SIZE\&. "
.ti -1c
.RI "void \fBouverture_disque\fP (\fBvirtual_disk_t\fP *virtual_disk)"
.br
.RI "Ouvre le disque systeme d0 en lecture/écriture binaire\&. "
.ti -1c
.RI "void \fBfermeture_disque\fP (\fBvirtual_disk_t\fP *virtual_disk)"
.br
.RI "Ferme le disque systeme d0\&. "
.ti -1c
.RI "void \fBfoo_test_couche1\fP ()"
.br
.RI "Fonction test de la couche 1\&. "
.in -1c
.SH "Description détaillée"
.PP 
Header des fonctions pour la 1ère couche\&. 


.PP
\fBAuteur\fP
.RS 4
Clément Payart, Louis Lapointe, Mael Schiemsky 
.RE
.PP
\fBVersion\fP
.RS 4
1 
.RE
.PP
\fBDate\fP
.RS 4
2022-05-15
.RE
.PP
\fBCopyright\fP
.RS 4
Copyright (c) 2022 
.RE
.PP

.SH "Documentation des fonctions"
.PP 
.SS "void ajuster_message (unsigned char * message)"

.PP
Concatenation du message par des espace jusqu'à ce que la taille du fichier atteigne un multiple de BLOCK_SIZE\&. 
.PP
\fBParamètres\fP
.RS 4
\fImessage\fP Message potentiellement modifié 
.RE
.PP

.SS "unsigned int compute_nblock (unsigned int nb_byte, int block_size)"

.PP
Calcule le nombre de block à créer selon la taille du fichier et la taille d'un block\&. 
.PP
\fBParamètres\fP
.RS 4
\fInb_byte\fP taille du fichier 
.br
\fIblock_size\fP taille du block 
.RE
.PP
\fBRenvoie\fP
.RS 4
unsigned int nombre de block 
.RE
.PP

.SS "void error (const char * Message, int code_erreur)"

.PP
Fonction fusionnant perror et exit\&. 
.PP
\fBParamètres\fP
.RS 4
\fIMessage\fP Message à ecrire dans perror 
.br
\fIcode_erreur\fP code d'erreur à écrire dans exit 
.RE
.PP

.SS "void fermeture_disque (\fBvirtual_disk_t\fP * virtual_disk)"

.PP
Ferme le disque systeme d0\&. 
.PP
\fBParamètres\fP
.RS 4
\fIvirtual_disk\fP 
.RE
.PP

.SS "void init_disk_sos (\fBvirtual_disk_t\fP * virtual_disk)"

.PP
Initialisation du disque : ouverture du fichier d0 et création des valeurs dans le superblock\&. 
.PP
\fBParamètres\fP
.RS 4
\fIvirtual_disk\fP 
.RE
.PP

.SS "void ouverture_disque (\fBvirtual_disk_t\fP * virtual_disk)"

.PP
Ouvre le disque systeme d0 en lecture/écriture binaire\&. 
.PP
\fBParamètres\fP
.RS 4
\fIvirtual_disk\fP disque 
.RE
.PP

.SS "void print_block (\fBblock_t\fP block)"

.PP
Affichage en hex sur le stdout du contenu du block\&. 
.PP
\fBParamètres\fP
.RS 4
\fIblock\fP block lu 
.RE
.PP

.SS "\fBblock_t\fP read_block (unsigned int pos, FILE * file)"

.PP
Lit dans le fichier 'file' le block à la position pos\&. 
.PP
\fBParamètres\fP
.RS 4
\fIpos\fP position (octet) à laquelle il faut lire 
.br
\fIfile\fP Fichier de lecture 
.RE
.PP
\fBRenvoie\fP
.RS 4
block_t block contenant l'information lue 
.RE
.PP

.SS "void write_block (\fBblock_t\fP block, unsigned int pos, FILE * file)"

.PP
Ecrit dans le fichier 'file' le block à la position pos\&. 
.PP
\fBParamètres\fP
.RS 4
\fIblock\fP block contenant l'information à écrire 
.br
\fIpos\fP position (octet) à laquelle il faut écrire 
.br
\fIfile\fP Fichier de destination 
.RE
.PP

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour ScratchOS à partir du code source\&.
