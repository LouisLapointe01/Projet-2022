.TH "C:/Users/omard/Desktop/Projet_S4_grand_final/couche3/couche3.h" 3 "Lundi 16 Mai 2022" "ScratchOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/omard/Desktop/Projet_S4_grand_final/couche3/couche3.h \- Header des fonctions pour la 3ème couche\&.  

.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./global\&.h'\fP
.br
\fC#include '\&.\&./couche1/couche1\&.h'\fP
.br
\fC#include '\&.\&./couche2/couche2\&.h'\fP
.br
\fC#include '\&.\&./Sha256/sha256\&.h'\fP
.br
\fC#include '\&.\&./Sha256/sha256_utils\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSTRLONG\fP   30"
.br
.in -1c
.SS "Fonctions"

.in +1c
.ti -1c
.RI "void \fBinit_users\fP (users_table_t *tablutilis)"
.br
.RI "Initialise la table utilisateur avec un root\&. "
.ti -1c
.RI "void \fBadd_user\fP (\fBvirtual_disk_t\fP *virtual_disk, char *login)"
.br
.RI "Ajoute un utilisateur\&. "
.ti -1c
.RI "bool \fBdel_user_root_privilege\fP (\fBvirtual_disk_t\fP *virtual_disk, char *login)"
.br
.RI "Fonction réservée à root\&. Efface l'utilisateur; pas besoin de son mot de passe\&. "
.ti -1c
.RI "bool \fBlogin_exist\fP (users_table_t *tablutilis, char *login, int *indice_user)"
.br
.RI "Verification que le login en paramètre est dans la table d'utilisateur Modification de l'indice user si le login existe\&. "
.ti -1c
.RI "bool \fBtab_user_is_full\fP (users_table_t *tablutilis)"
.br
.RI "Vérifie si le tableau d'utilisateur est plein ou non\&. "
.ti -1c
.RI "bool \fBtab_user_is_empty\fP (users_table_t *tablutilis)"
.br
.RI "Vérifie si le tableau d'utilisateur est vide ou non (on ne prends pas en compte l'utilisateur ROOT) "
.ti -1c
.RI "void \fBwrite_user_table\fP (\fBvirtual_disk_t\fP *virtual_disk)"
.br
.RI "Ecrit sur le disque la table d'utilisateur\&. "
.ti -1c
.RI "bool \fBlogin_in\fP (users_table_t *users_table, \fBsession_t\fP *session)"
.br
.RI "Connection à la session\&. Demande d'inscrire son login et son mot de passe\&. "
.ti -1c
.RI "void \fBread_user_table\fP (\fBvirtual_disk_t\fP *virtual_disk)"
.br
.RI "Lit le disque d0 et récupère les informations dans la variable virtual disk\&. "
.ti -1c
.RI "void \fBfoo_test_couche3\fP ()"
.br
.RI "Fonction de test des fonctions de la couche3\&. "
.in -1c
.SH "Description détaillée"
.PP 
Header des fonctions pour la 3ème couche\&. 


.PP
\fBAuteur\fP
.RS 4
Clément Payart, Louis Lapointe, Mael Schiemsky 
.RE
.PP
\fBVersion\fP
.RS 4
1 
.RE
.PP
\fBDate\fP
.RS 4
2022-05-15
.RE
.PP
\fBCopyright\fP
.RS 4
Copyright (c) 2022 
.RE
.PP

.SH "Documentation des fonctions"
.PP 
.SS "void add_user (\fBvirtual_disk_t\fP * virtual_disk, char * login)"

.PP
Ajoute un utilisateur\&. 
.PP
\fBParamètres\fP
.RS 4
\fIvirtual_disk\fP Disque contenant la table d'utilisateur 
.br
\fIlogin\fP Login utilisateur 
.RE
.PP

.SS "bool del_user_root_privilege (\fBvirtual_disk_t\fP * virtual_disk, char * login)"

.PP
Fonction réservée à root\&. Efface l'utilisateur; pas besoin de son mot de passe\&. 
.PP
\fBParamètres\fP
.RS 4
\fIvirtual_disk\fP Disque contenant le tableau d'utilisateur\&. Peut potentiellement contenir le login à effacer 
.br
\fIlogin\fP login à effacer 
.RE
.PP
\fBRenvoie\fP
.RS 4
true Le login a été effacé 
.PP
false Erreur lors de la suppression du login 
.RE
.PP

.SS "void init_users (users_table_t * tablutilis)"

.PP
Initialise la table utilisateur avec un root\&. 
.PP
\fBParamètres\fP
.RS 4
\fItablutilis\fP Table d'utilisateurs 
.RE
.PP

.SS "bool login_exist (users_table_t * tablutilis, char * login, int * indice_user)"

.PP
Verification que le login en paramètre est dans la table d'utilisateur Modification de l'indice user si le login existe\&. 
.PP
\fBParamètres\fP
.RS 4
\fItablutilis\fP Table d'utilisateur contenant (ou non) le login 
.br
\fIlogin\fP login à vérifier 
.br
\fIindice_user\fP Indice du potentiel login, sera modifié si ce dernier existe 
.RE
.PP
\fBRenvoie\fP
.RS 4
true Le login existe 
.PP
false Le login n'existe pas 
.RE
.PP

.SS "bool login_in (users_table_t * users_table, \fBsession_t\fP * session)"

.PP
Connection à la session\&. Demande d'inscrire son login et son mot de passe\&. 
.PP
\fBParamètres\fP
.RS 4
\fIusers_table\fP Table d'utilisateur, sert de vérification au login et mot de passe 
.br
\fIsession\fP si le login s'est bien déroulé, sauvegarde de l'index d'utilisateur dans la session 
.RE
.PP

.SS "void read_user_table (\fBvirtual_disk_t\fP * virtual_disk)"

.PP
Lit le disque d0 et récupère les informations dans la variable virtual disk\&. 
.PP
\fBParamètres\fP
.RS 4
\fIvirtual_disk\fP disque contenant le tableau à lire 
.RE
.PP

.SS "bool tab_user_is_empty (users_table_t * tablutilis)"

.PP
Vérifie si le tableau d'utilisateur est vide ou non (on ne prends pas en compte l'utilisateur ROOT) 
.PP
\fBParamètres\fP
.RS 4
\fItablutilis\fP Table d'utilisateurs 
.RE
.PP
\fBRenvoie\fP
.RS 4
true Si la table est vide 
.PP
false Si la table n'est pas vide 
.RE
.PP

.SS "bool tab_user_is_full (users_table_t * tablutilis)"

.PP
Vérifie si le tableau d'utilisateur est plein ou non\&. 
.PP
\fBParamètres\fP
.RS 4
\fItablutilis\fP Tableau d'utilisateurs à vérifier 
.RE
.PP
\fBRenvoie\fP
.RS 4
true Si le tableau est plein 
.PP
false Si il reste de la place dans la bouche à clément 
.RE
.PP

.SS "void write_user_table (\fBvirtual_disk_t\fP * virtual_disk)"

.PP
Ecrit sur le disque la table d'utilisateur\&. 
.PP
\fBParamètres\fP
.RS 4
\fIvirtual_disk\fP disque ou sera écrit la table d'utilisateur\&. 
.RE
.PP

.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour ScratchOS à partir du code source\&.
