<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_couche3_8h" xml:lang="fr">
<title>Référence du fichier C:/Users/omard/Desktop/Projet_S4_grand_final/couche3/couche3.h</title>
<indexterm><primary>C:/Users/omard/Desktop/Projet_S4_grand_final/couche3/couche3.h</primary></indexterm>
<para>

<para>Header des fonctions pour la 3ème couche. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;../global.h&quot;
#include &quot;../couche1/couche1.h&quot;
#include &quot;../couche2/couche2.h&quot;
#include &quot;../Sha256/sha256.h&quot;
#include &quot;../Sha256/sha256_utils.h&quot;
</programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_couche3_8h_1aede308204703be915dc246c963914dbe"/>#define <emphasis role="strong">STRLONG</emphasis>   30</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_couche3_8h_1ab82e52a6643b3d211405423b5013455d">init_users</link> (users_table_t *tablutilis)</para>

<para>Initialise la table utilisateur avec un root. </para>
</listitem>
            <listitem><para>void <link linkend="_couche3_8h_1a319f7d16af0ed1325094b018ab7c1f7e">add_user</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk, char *login)</para>

<para>Ajoute un utilisateur. </para>
</listitem>
            <listitem><para>bool <link linkend="_couche3_8h_1a5e8623edb4873c3162e8ee72d96dacfb">del_user_root_privilege</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk, char *login)</para>

<para>Fonction réservée à root. Efface l&apos;utilisateur; pas besoin de son mot de passe. </para>
</listitem>
            <listitem><para>bool <link linkend="_couche3_8h_1a6f4742fabc76af55e91b9e4d86b4cee8">login_exist</link> (users_table_t *tablutilis, char *login, int *indice_user)</para>

<para>Verification que le login en paramètre est dans la table d&apos;utilisateur Modification de l&apos;indice user si le login existe. </para>
</listitem>
            <listitem><para>bool <link linkend="_couche3_8h_1acdd62fcf347c560759764e33b3e08051">tab_user_is_full</link> (users_table_t *tablutilis)</para>

<para>Vérifie si le tableau d&apos;utilisateur est plein ou non. </para>
</listitem>
            <listitem><para>bool <link linkend="_couche3_8h_1a283664a064013581733bd3f64aefb16f">tab_user_is_empty</link> (users_table_t *tablutilis)</para>

<para>Vérifie si le tableau d&apos;utilisateur est vide ou non (on ne prends pas en compte l&apos;utilisateur ROOT) </para>
</listitem>
            <listitem><para>void <link linkend="_couche3_8h_1aa29c58cb896034973ef9f5ee58bcf5bd">write_user_table</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Ecrit sur le disque la table d&apos;utilisateur. </para>
</listitem>
            <listitem><para>bool <link linkend="_couche3_8h_1ac2a32e032ead705143aaed03f0b2bef8">login_in</link> (users_table_t *users_table, <link linkend="_structsession__s">session_t</link> *session)</para>

<para>Connection à la session. Demande d&apos;inscrire son login et son mot de passe. </para>
</listitem>
            <listitem><para>void <link linkend="_couche3_8h_1a80413e148e8072a665b44717ee4c61f7">read_user_table</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Lit le disque d0 et récupère les informations dans la variable virtual disk. </para>
</listitem>
            <listitem><para><anchor xml:id="_couche3_8h_1a38de5e1fdef322cce0c39fbdf37fe764"/>void <emphasis role="strong">foo_test_couche3</emphasis> ()</para>

<para>Fonction de test des fonctions de la couche3. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Header des fonctions pour la 3ème couche. </para>

<para><formalpara><title>Auteur</title>

<para>Clément Payart, Louis Lapointe, Mael Schiemsky </para>
</formalpara>
<formalpara><title>Version</title>

<para>1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2022-05-15</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2022 </para>
</formalpara>
</para>
</section>
<section>
<title>Documentation des fonctions</title>
<anchor xml:id="_couche3_8h_1a319f7d16af0ed1325094b018ab7c1f7e"/><section>
    <title>add_user()</title>
<indexterm><primary>add_user</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>add_user</secondary></indexterm>
<para><computeroutput>void add_user (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk, char * login)</computeroutput></para><para>

<para>Ajoute un utilisateur. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>Disque contenant la table d&apos;utilisateur </para>
</entry>
                            </row>
                            <row>
<entry>login</entry><entry>
<para>Login utilisateur </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche3_8h_1a5e8623edb4873c3162e8ee72d96dacfb"/><section>
    <title>del_user_root_privilege()</title>
<indexterm><primary>del_user_root_privilege</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>del_user_root_privilege</secondary></indexterm>
<para><computeroutput>bool del_user_root_privilege (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk, char * login)</computeroutput></para><para>

<para>Fonction réservée à root. Efface l&apos;utilisateur; pas besoin de son mot de passe. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>Disque contenant le tableau d&apos;utilisateur. Peut potentiellement contenir le login à effacer </para>
</entry>
                            </row>
                            <row>
<entry>login</entry><entry>
<para>login à effacer </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>true Le login a été effacé </para>

<para>false Erreur lors de la suppression du login </para>
</formalpara>
</para>
</section>
<anchor xml:id="_couche3_8h_1ab82e52a6643b3d211405423b5013455d"/><section>
    <title>init_users()</title>
<indexterm><primary>init_users</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>init_users</secondary></indexterm>
<para><computeroutput>void init_users (users_table_t * tablutilis)</computeroutput></para><para>

<para>Initialise la table utilisateur avec un root. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>tablutilis</entry><entry>
<para>Table d&apos;utilisateurs </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche3_8h_1a6f4742fabc76af55e91b9e4d86b4cee8"/><section>
    <title>login_exist()</title>
<indexterm><primary>login_exist</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>login_exist</secondary></indexterm>
<para><computeroutput>bool login_exist (users_table_t * tablutilis, char * login, int * indice_user)</computeroutput></para><para>

<para>Verification que le login en paramètre est dans la table d&apos;utilisateur Modification de l&apos;indice user si le login existe. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>tablutilis</entry><entry>
<para>Table d&apos;utilisateur contenant (ou non) le login </para>
</entry>
                            </row>
                            <row>
<entry>login</entry><entry>
<para>login à vérifier </para>
</entry>
                            </row>
                            <row>
<entry>indice_user</entry><entry>
<para>Indice du potentiel login, sera modifié si ce dernier existe </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>true Le login existe </para>

<para>false Le login n&apos;existe pas </para>
</formalpara>
</para>
</section>
<anchor xml:id="_couche3_8h_1ac2a32e032ead705143aaed03f0b2bef8"/><section>
    <title>login_in()</title>
<indexterm><primary>login_in</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>login_in</secondary></indexterm>
<para><computeroutput>bool login_in (users_table_t * users_table, <link linkend="_structsession__s">session_t</link> * session)</computeroutput></para><para>

<para>Connection à la session. Demande d&apos;inscrire son login et son mot de passe. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>users_table</entry><entry>
<para>Table d&apos;utilisateur, sert de vérification au login et mot de passe </para>
</entry>
                            </row>
                            <row>
<entry>session</entry><entry>
<para>si le login s&apos;est bien déroulé, sauvegarde de l&apos;index d&apos;utilisateur dans la session </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche3_8h_1a80413e148e8072a665b44717ee4c61f7"/><section>
    <title>read_user_table()</title>
<indexterm><primary>read_user_table</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>read_user_table</secondary></indexterm>
<para><computeroutput>void read_user_table (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Lit le disque d0 et récupère les informations dans la variable virtual disk. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>disque contenant le tableau à lire </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche3_8h_1a283664a064013581733bd3f64aefb16f"/><section>
    <title>tab_user_is_empty()</title>
<indexterm><primary>tab_user_is_empty</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>tab_user_is_empty</secondary></indexterm>
<para><computeroutput>bool tab_user_is_empty (users_table_t * tablutilis)</computeroutput></para><para>

<para>Vérifie si le tableau d&apos;utilisateur est vide ou non (on ne prends pas en compte l&apos;utilisateur ROOT) </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>tablutilis</entry><entry>
<para>Table d&apos;utilisateurs </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>true Si la table est vide </para>

<para>false Si la table n&apos;est pas vide </para>
</formalpara>
</para>
</section>
<anchor xml:id="_couche3_8h_1acdd62fcf347c560759764e33b3e08051"/><section>
    <title>tab_user_is_full()</title>
<indexterm><primary>tab_user_is_full</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>tab_user_is_full</secondary></indexterm>
<para><computeroutput>bool tab_user_is_full (users_table_t * tablutilis)</computeroutput></para><para>

<para>Vérifie si le tableau d&apos;utilisateur est plein ou non. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>tablutilis</entry><entry>
<para>Tableau d&apos;utilisateurs à vérifier </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>true Si le tableau est plein </para>

<para>false Si il reste de la place dans la bouche à clément </para>
</formalpara>
</para>
</section>
<anchor xml:id="_couche3_8h_1aa29c58cb896034973ef9f5ee58bcf5bd"/><section>
    <title>write_user_table()</title>
<indexterm><primary>write_user_table</primary><secondary>couche3.h</secondary></indexterm>
<indexterm><primary>couche3.h</primary><secondary>write_user_table</secondary></indexterm>
<para><computeroutput>void write_user_table (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Ecrit sur le disque la table d&apos;utilisateur. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>disque ou sera écrit la table d&apos;utilisateur. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
