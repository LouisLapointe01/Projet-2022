<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_couche2_8h_source" xml:lang="fr">
<title>couche2.h</title>
<indexterm><primary>C:/Users/omard/Desktop/Projet_S4_grand_final/couche2/couche2.h</primary></indexterm>
Aller Ã  la documentation de ce fichier.<programlisting linenumbering="unnumbered">1 
12 <emphasis role="preprocessor">#ifndef&#32;COUCHE2</emphasis>
13 <emphasis role="preprocessor">#define&#32;COUCHE2</emphasis>
14 
15 <emphasis role="preprocessor">#include&#32;&quot;../global.h&quot;</emphasis>
16 <emphasis role="preprocessor">#include&#32;&quot;../couche1/couche1.h&quot;</emphasis>
17 
23 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1a0ceb6122328aad608a3c9c11960c1f47">write_super_block</link>(<link linkend="_structvirtual__disk__s">virtual_disk_t</link>&#32;*virtual_disk);
24 
30 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1ab31b7169eaa5242d6fceca44d5f42572">read_super_block</link>(<link linkend="_structvirtual__disk__s">virtual_disk_t</link>&#32;*virtual_disk);
31 
38 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1a357cb52ccd1936a59458e1ea0af9e3f1">change_first_byte</link>(<link linkend="_structsuper__block__s">super_block_t</link>&#32;*super_block,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;value);
39 
45 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1ae9b93e4cf07390657b4fa2fc4aa850d2">print_super_block</link>(<link linkend="_structsuper__block__s">super_block_t</link>&#32;superblock);
46 
52 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1a01a3597c5b668bf8e371ffb149894c4e">read_inodes_table</link>(<link linkend="_structvirtual__disk__s">virtual_disk_t</link>&#32;*virtual_disk);
53 
59 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1a14db98ebf68bc90d5bae54bf0ea7b9e5">write_inodes_table</link>(<link linkend="_structvirtual__disk__s">virtual_disk_t</link>&#32;*virtual_disk);
60 
67 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_couche2_8h_1a480ee137d116c25767764b082c5c7ee6">get_unused_inode</link>(<link linkend="_structvirtual__disk__s">virtual_disk_t</link>&#32;*virtual_disk);
68 
77 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1a209f552ae2327e8258b2f4d1d110e3c1">init_inode</link>(<link linkend="_structvirtual__disk__s">virtual_disk_t</link>&#32;*virtual_disk,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*filename,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;size,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;pos);
78 
84 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1a03fa7d0fec465925d3c928dcb52138e2">empty_inode</link>(<link linkend="_structinode__s">inode_t</link>&#32;*inode);
85 
92 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1a45d3a09f4a911cfdc03beb3eec741919">delete_inode</link>(<link linkend="_structvirtual__disk__s">virtual_disk_t</link>&#32;*virtual_disk,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;indice);
93 
98 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1ae5b029f6d3e7092017ac58429418c966">cmd_dump_inode</link>();
99 
105 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_couche2_8h_1ae2d5a98681d97602a8170f0be69d9101">create_empty_inode_table</link>(<link linkend="_structvirtual__disk__s">virtual_disk_t</link>&#32;*virtual_disk);
106 
107 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
