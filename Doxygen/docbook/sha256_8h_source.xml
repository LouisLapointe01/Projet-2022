<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_sha256_8h_source" xml:lang="fr">
<title>sha256.h</title>
<indexterm><primary>C:/Users/omard/Desktop/Projet_S4_grand_final/Sha256/sha256.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*********************************************************************</emphasis>
2 <emphasis role="comment">*&#32;Filename:&#32;&#32;&#32;sha256.h</emphasis>
3 <emphasis role="comment">*&#32;Author:&#32;&#32;&#32;&#32;&#32;Brad&#32;Conte&#32;(brad&#32;AT&#32;bradconte.com)</emphasis>
4 <emphasis role="comment">*&#32;Copyright:</emphasis>
5 <emphasis role="comment">*&#32;Disclaimer:&#32;This&#32;code&#32;is&#32;presented&#32;&quot;as&#32;is&quot;&#32;without&#32;any&#32;guarantees.</emphasis>
6 <emphasis role="comment">*&#32;Details:&#32;&#32;&#32;&#32;Defines&#32;the&#32;API&#32;for&#32;the&#32;corresponding&#32;SHA1&#32;implementation.</emphasis>
7 <emphasis role="comment">*********************************************************************/</emphasis>
8 
9 <emphasis role="preprocessor">#ifndef&#32;SHA256_H</emphasis>
10 <emphasis role="preprocessor">#define&#32;SHA256_H</emphasis>
11 
12 <emphasis role="comment">/***************************&#32;HEADER&#32;FILES&#32;***************************/</emphasis>
13 <emphasis role="preprocessor">#include&#32;&lt;stddef.h&gt;</emphasis>
14 
15 <emphasis role="comment">/******************************&#32;MACROS&#32;******************************/</emphasis>
16 <emphasis role="preprocessor">#define&#32;SHA256_BLOCK_SIZE&#32;32&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SHA256&#32;outputs&#32;a&#32;32&#32;byte&#32;digest</emphasis>
17 
18 <emphasis role="comment">/****************************&#32;DATA&#32;TYPES&#32;****************************/</emphasis>
19 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;BYTE;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;8-bit&#32;byte</emphasis>
20 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;WORD;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;32-bit&#32;word,&#32;change&#32;to&#32;&quot;long&quot;&#32;for&#32;16-bit&#32;machines</emphasis>
21 
22 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
23 &#32;&#32;&#32;&#32;BYTE&#32;data[64];
24 &#32;&#32;&#32;&#32;WORD&#32;datalen;
25 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;bitlen;
26 &#32;&#32;&#32;&#32;WORD&#32;state[8];
27 }&#32;<link linkend="_struct_s_h_a256___c_t_x">SHA256_CTX</link>;
28 
29 <emphasis role="comment">/***********************&#32;FUNCTION&#32;DECLARATIONS&#32;**********************/</emphasis>
30 <emphasis role="keywordtype">void</emphasis>&#32;sha256_init(<link linkend="_struct_s_h_a256___c_t_x">SHA256_CTX</link>&#32;*ctx);
31 <emphasis role="keywordtype">void</emphasis>&#32;sha256_update(<link linkend="_struct_s_h_a256___c_t_x">SHA256_CTX</link>&#32;*ctx,&#32;<emphasis role="keyword">const</emphasis>&#32;BYTE&#32;data[],&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;len);
32 <emphasis role="keywordtype">void</emphasis>&#32;sha256_final(<link linkend="_struct_s_h_a256___c_t_x">SHA256_CTX</link>&#32;*ctx,&#32;BYTE&#32;hash[]);
33 
34 <emphasis role="preprocessor">#endif&#32;&#32;&#32;</emphasis><emphasis role="comment">//&#32;SHA256_H</emphasis>
</programlisting></section>
