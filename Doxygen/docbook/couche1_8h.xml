<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_couche1_8h" xml:lang="fr">
<title>Référence du fichier C:/Users/omard/Desktop/Projet_S4_grand_final/couche1/couche1.h</title>
<indexterm><primary>C:/Users/omard/Desktop/Projet_S4_grand_final/couche1/couche1.h</primary></indexterm>
<para>

<para>Header des fonctions pour la 1ère couche. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;../global.h&quot;
</programlisting><simplesect>
    <title>Fonctions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_couche1_8h_1a04533aaa31d1ea5af4c89609ae2b4c4a">error</link> (const char *Message, int code_erreur)</para>

<para>Fonction fusionnant perror et exit. </para>
</listitem>
            <listitem><para>void <link linkend="_couche1_8h_1a296a0525129ef3b60edb17391a9428d3">init_disk_sos</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Initialisation du disque : ouverture du fichier d0 et création des valeurs dans le superblock. </para>
</listitem>
            <listitem><para>unsigned int <link linkend="_couche1_8h_1a115a6d3476832de2a7f15bde14b4fc35">compute_nblock</link> (unsigned int nb_byte, int block_size)</para>

<para>Calcule le nombre de block à créer selon la taille du fichier et la taille d&apos;un block. </para>
</listitem>
            <listitem><para>void <link linkend="_couche1_8h_1ad8080ab9be6b24bfd2cf65969812eeca">write_block</link> (<link linkend="_structblock__s">block_t</link> block, unsigned int pos, FILE *file)</para>

<para>Ecrit dans le fichier &apos;file&apos; le block à la position pos. </para>
</listitem>
            <listitem><para><link linkend="_structblock__s">block_t</link> <link linkend="_couche1_8h_1aa12a54fd468f85ab94ffc2d36f105908">read_block</link> (unsigned int pos, FILE *file)</para>

<para>Lit dans le fichier &apos;file&apos; le block à la position pos. </para>
</listitem>
            <listitem><para>void <link linkend="_couche1_8h_1aea5106f48db9419ae773a69fe19df0f6">print_block</link> (<link linkend="_structblock__s">block_t</link> block)</para>

<para>Affichage en hex sur le stdout du contenu du block. </para>
</listitem>
            <listitem><para>void <link linkend="_couche1_8h_1ad52add3e5fdc800a24a6a7dfea69bc79">ajuster_message</link> (unsigned char *message)</para>

<para>Concatenation du message par des espace jusqu&apos;à ce que la taille du fichier atteigne un multiple de BLOCK_SIZE. </para>
</listitem>
            <listitem><para>void <link linkend="_couche1_8h_1af7d1e9ef88f748cdb1f4de2ec73dcdb6">ouverture_disque</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Ouvre le disque systeme d0 en lecture/écriture binaire. </para>
</listitem>
            <listitem><para>void <link linkend="_couche1_8h_1a4b8a74625c5db080dcfbeccac0d46bdd">fermeture_disque</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Ferme le disque systeme d0. </para>
</listitem>
            <listitem><para><anchor xml:id="_couche1_8h_1a7c229486bc3f5a702197d94a767d9d1f"/>void <emphasis role="strong">foo_test_couche1</emphasis> ()</para>

<para>Fonction test de la couche 1. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Header des fonctions pour la 1ère couche. </para>

<para><formalpara><title>Auteur</title>

<para>Clément Payart, Louis Lapointe, Mael Schiemsky </para>
</formalpara>
<formalpara><title>Version</title>

<para>1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2022-05-15</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2022 </para>
</formalpara>
</para>
</section>
<section>
<title>Documentation des fonctions</title>
<anchor xml:id="_couche1_8h_1ad52add3e5fdc800a24a6a7dfea69bc79"/><section>
    <title>ajuster_message()</title>
<indexterm><primary>ajuster_message</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>ajuster_message</secondary></indexterm>
<para><computeroutput>void ajuster_message (unsigned char * message)</computeroutput></para><para>

<para>Concatenation du message par des espace jusqu&apos;à ce que la taille du fichier atteigne un multiple de BLOCK_SIZE. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>message</entry><entry>
<para>Message potentiellement modifié </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche1_8h_1a115a6d3476832de2a7f15bde14b4fc35"/><section>
    <title>compute_nblock()</title>
<indexterm><primary>compute_nblock</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>compute_nblock</secondary></indexterm>
<para><computeroutput>unsigned int compute_nblock (unsigned int nb_byte, int block_size)</computeroutput></para><para>

<para>Calcule le nombre de block à créer selon la taille du fichier et la taille d&apos;un block. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>nb_byte</entry><entry>
<para>taille du fichier </para>
</entry>
                            </row>
                            <row>
<entry>block_size</entry><entry>
<para>taille du block </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>unsigned int nombre de block </para>
</formalpara>
</para>
</section>
<anchor xml:id="_couche1_8h_1a04533aaa31d1ea5af4c89609ae2b4c4a"/><section>
    <title>error()</title>
<indexterm><primary>error</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>error</secondary></indexterm>
<para><computeroutput>void error (const char * Message, int code_erreur)</computeroutput></para><para>

<para>Fonction fusionnant perror et exit. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Message</entry><entry>
<para>Message à ecrire dans perror </para>
</entry>
                            </row>
                            <row>
<entry>code_erreur</entry><entry>
<para>code d&apos;erreur à écrire dans exit </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche1_8h_1a4b8a74625c5db080dcfbeccac0d46bdd"/><section>
    <title>fermeture_disque()</title>
<indexterm><primary>fermeture_disque</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>fermeture_disque</secondary></indexterm>
<para><computeroutput>void fermeture_disque (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Ferme le disque systeme d0. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche1_8h_1a296a0525129ef3b60edb17391a9428d3"/><section>
    <title>init_disk_sos()</title>
<indexterm><primary>init_disk_sos</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>init_disk_sos</secondary></indexterm>
<para><computeroutput>void init_disk_sos (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Initialisation du disque : ouverture du fichier d0 et création des valeurs dans le superblock. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche1_8h_1af7d1e9ef88f748cdb1f4de2ec73dcdb6"/><section>
    <title>ouverture_disque()</title>
<indexterm><primary>ouverture_disque</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>ouverture_disque</secondary></indexterm>
<para><computeroutput>void ouverture_disque (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Ouvre le disque systeme d0 en lecture/écriture binaire. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>disque </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche1_8h_1aea5106f48db9419ae773a69fe19df0f6"/><section>
    <title>print_block()</title>
<indexterm><primary>print_block</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>print_block</secondary></indexterm>
<para><computeroutput>void print_block (<link linkend="_structblock__s">block_t</link> block)</computeroutput></para><para>

<para>Affichage en hex sur le stdout du contenu du block. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>block</entry><entry>
<para>block lu </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche1_8h_1aa12a54fd468f85ab94ffc2d36f105908"/><section>
    <title>read_block()</title>
<indexterm><primary>read_block</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>read_block</secondary></indexterm>
<para><computeroutput><link linkend="_structblock__s">block_t</link> read_block (unsigned int pos, FILE * file)</computeroutput></para><para>

<para>Lit dans le fichier &apos;file&apos; le block à la position pos. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>pos</entry><entry>
<para>position (octet) à laquelle il faut lire </para>
</entry>
                            </row>
                            <row>
<entry>file</entry><entry>
<para>Fichier de lecture </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>block_t block contenant l&apos;information lue </para>
</formalpara>
</para>
</section>
<anchor xml:id="_couche1_8h_1ad8080ab9be6b24bfd2cf65969812eeca"/><section>
    <title>write_block()</title>
<indexterm><primary>write_block</primary><secondary>couche1.h</secondary></indexterm>
<indexterm><primary>couche1.h</primary><secondary>write_block</secondary></indexterm>
<para><computeroutput>void write_block (<link linkend="_structblock__s">block_t</link> block, unsigned int pos, FILE * file)</computeroutput></para><para>

<para>Ecrit dans le fichier &apos;file&apos; le block à la position pos. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>block</entry><entry>
<para>block contenant l&apos;information à écrire </para>
</entry>
                            </row>
                            <row>
<entry>pos</entry><entry>
<para>position (octet) à laquelle il faut écrire </para>
</entry>
                            </row>
                            <row>
<entry>file</entry><entry>
<para>Fichier de destination </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
