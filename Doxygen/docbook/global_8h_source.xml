<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_global_8h_source" xml:lang="fr">
<title>C:/Users/omard/Desktop/Projet_S4_grand_final/global.h</title>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;__OS_DEFINES__</emphasis>
2 <emphasis role="preprocessor">#define&#32;__OS_DEFINES__</emphasis>
3 
4 
5 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;assert.h&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;stdbool.h&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&lt;time.h&gt;</emphasis>
11 <emphasis role="preprocessor">#include&#32;&lt;sys/types.h&gt;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&lt;sys/stat.h&gt;</emphasis>
13 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
14 
15 
16 <emphasis role="preprocessor">#include&#32;&quot;Sha256/sha256.h&quot;</emphasis>
17 <emphasis role="preprocessor">#include&#32;&quot;Sha256/sha256_utils.h&quot;</emphasis>
18 
19 <emphasis role="comment">//&#32;pour&#32;les&#32;droits&#32;:&#32;minuscule&#32;=&#32;pas&#32;le&#32;droit,&#32;majuscule&#32;=&#32;droit&#32;ok</emphasis>
20 <emphasis role="preprocessor">#define&#32;rw&#32;0&#32;</emphasis><emphasis role="comment">//&#32;00</emphasis>
21 <emphasis role="preprocessor">#define&#32;rW&#32;1&#32;</emphasis><emphasis role="comment">//&#32;01</emphasis>
22 <emphasis role="preprocessor">#define&#32;Rw&#32;2&#32;</emphasis><emphasis role="comment">//&#32;10</emphasis>
23 <emphasis role="preprocessor">#define&#32;RW&#32;3&#32;</emphasis><emphasis role="comment">//&#32;11</emphasis>
24 <emphasis role="preprocessor">#define&#32;ROOT_UID&#32;0</emphasis>
25 
26 <emphasis role="preprocessor">#define&#32;FILENAME_MAX_SIZE&#32;32&#32;</emphasis><emphasis role="comment">//&#32;nb&#32;max&#32;de&#32;caractères&#32;des&#32;noms&#32;de&#32;fichiers</emphasis>
27 <emphasis role="preprocessor">#define&#32;MAX_FILE_SIZE&#32;(2*1024)&#32;</emphasis><emphasis role="comment">//&#32;taille&#32;max&#32;d&apos;un&#32;fichier&#32;(uchar)</emphasis>
28 <emphasis role="preprocessor">#define&#32;INODE_TABLE_SIZE&#32;10&#32;</emphasis><emphasis role="comment">//&#32;taille&#32;fixe&#32;=&#32;nb&#32;max&#32;de&#32;fichiers&#32;dans&#32;le&#32;SE</emphasis>
29 <emphasis role="preprocessor">#define&#32;MAX_MSG&#32;1024&#32;</emphasis><emphasis role="comment">//&#32;uchar</emphasis>
30 <emphasis role="preprocessor">#define&#32;TIMESTAMP_SIZE&#32;26&#32;</emphasis><emphasis role="comment">//&#32;avec&#32;\0&#32;et&#32;pour&#32;que&#32;ça&#32;tombe&#32;juste&#32;avec&#32;les&#32;blocs</emphasis>
31 <emphasis role="preprocessor">#define&#32;NB_USERS&#32;5</emphasis>
32 
33 <emphasis role="preprocessor">#define&#32;BLOCK_SIZE&#32;4&#32;</emphasis><emphasis role="comment">//&#32;octets</emphasis>
34 <emphasis role="preprocessor">#define&#32;SUPER_BLOCK_SIZE&#32;4&#32;</emphasis><emphasis role="comment">//&#32;nb&#32;blocs</emphasis>
35 <emphasis role="preprocessor">#define&#32;INODES_START&#32;SUPER_BLOCK_SIZE*BLOCK_SIZE+1&#32;</emphasis><emphasis role="comment">//&#32;en&#32;octets</emphasis>
36 <emphasis role="preprocessor">#define&#32;INODE_SIZE&#32;(FILENAME_MAX_SIZE/BLOCK_SIZE)+6+((TIMESTAMP_SIZE*2)/BLOCK_SIZE)</emphasis>
37 <emphasis role="comment">//=&#32;27&#32;en&#32;blocs&#32;=&#32;8&#32;blocs&#32;de&#32;filename+6&#32;uint+timestamps</emphasis>
38 <emphasis role="preprocessor">#define&#32;USER_START&#32;(INODES_START)&#32;+&#32;(INODE_SIZE)*(INODE_TABLE_SIZE)*BLOCK_SIZE&#32;</emphasis>
39 <emphasis role="preprocessor">#define&#32;USER_SIZE&#32;((FILENAME_MAX_SIZE)&#32;+&#32;(SHA256_BLOCK_SIZE*2&#32;+&#32;1&#32;+&#32;3))/BLOCK_SIZE</emphasis>
40 <emphasis role="comment">//=&#32;25&#32;en&#32;blocs&#32;=&#32;8&#32;blocs&#32;de&#32;filename&#32;+&#32;17&#32;pour&#32;le&#32;passwd(+3&#32;pour&#32;que&#32;ça&#32;tombe&#32;juste)</emphasis>
41 
42 <emphasis role="preprocessor">#define&#32;FIRST_FREE_BYTE&#32;(SUPER_BLOCK_SIZE*BLOCK_SIZE)+((INODE_SIZE)*(INODE_TABLE_SIZE)*BLOCK_SIZE)+((USER_SIZE)*BLOCK_SIZE*NB_USERS)&#32;+1</emphasis>
43 <emphasis role="comment">//&#32;Le&#32;premier&#32;fichier&#32;sera&#32;écrit&#32;au&#32;1597eme&#32;octet</emphasis>
44 
45 
46 
47 <emphasis role="preprocessor">#define&#32;OUVERTURE_ERR&#32;1</emphasis>
48 <emphasis role="preprocessor">#define&#32;ECRITURE_ERR&#32;2</emphasis>
49 <emphasis role="preprocessor">#define&#32;FERMETURE_ERR&#32;3</emphasis>
50 <emphasis role="preprocessor">#define&#32;LECTURE_ERR&#32;4</emphasis>
51 <emphasis role="preprocessor">#define&#32;FULL_ERR&#32;5</emphasis>
52 <emphasis role="preprocessor">#define&#32;POS_END&#32;6</emphasis>
53 <emphasis role="preprocessor">#define&#32;POS_BIG&#32;7</emphasis>
54 <emphasis role="preprocessor">#define&#32;SIZE_FILE_ERR&#32;8</emphasis>
55 <emphasis role="preprocessor">#define&#32;CREATION_ERR&#32;9</emphasis>
56 <emphasis role="preprocessor">#define&#32;COMMAND_ERR&#32;10</emphasis>
57 <emphasis role="preprocessor">#define&#32;ARG_ERR&#32;-1</emphasis>
58 
59 
60 
61 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;uint;&#32;<emphasis role="comment">//&#32;même&#32;taille&#32;que&#32;int</emphasis>
62 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;uchar;&#32;<emphasis role="comment">//&#32;8&#32;bits&#32;non&#32;signés&#32;=&#32;octet</emphasis>
63 
64 <emphasis role="preprocessor">#define&#32;RED&#32;&quot;\x1B[31m&quot;</emphasis>
65 <emphasis role="preprocessor">#define&#32;NRM&#32;&quot;\x1B[0m&quot;</emphasis>
66 <emphasis role="preprocessor">#define&#32;GRN&#32;&#32;&quot;\x1B[32m&quot;</emphasis>
67 
68 
69 <emphasis role="comment">//&#32;structure&#32;pour&#32;la&#32;table&#32;des&#32;utilisateurs</emphasis>
70 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structuser__s">user_s</link>{
71 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;login[FILENAME_MAX_SIZE];
72 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;passwd[SHA256_BLOCK_SIZE*2&#32;+&#32;1];&#32;<emphasis role="comment">//&#32;64&#32;hex&#32;char&#32;=&#32;haché&#32;du&#32;passwd</emphasis>
73 }&#32;<link linkend="_structuser__s">user_t</link>;
74 
75 <emphasis role="comment">//&#32;pour&#32;gérer&#32;l&apos;uid&#32;tout&#32;le&#32;long&#32;de&#32;la&#32;session</emphasis>
76 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structsession__s">session_s</link>{
77 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;userid;
78 }&#32;<link linkend="_structsession__s">session_t</link>;
79 
80 <emphasis role="comment">/*&#32;Type&#32;of&#32;a&#32;block&#32;of&#32;data&#32;*/</emphasis>
81 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structblock__s">block_s</link>{
82 &#32;&#32;&#32;&#32;uchar&#32;data[BLOCK_SIZE];&#32;<emphasis role="comment">//&#32;une&#32;case&#32;par&#32;octet</emphasis>
83 }&#32;<link linkend="_structblock__s">block_t</link>;
84 
85 <emphasis role="comment">/*&#32;Type&#32;of&#32;the&#32;pseudo-inode&#32;structure&#32;*/</emphasis>
86 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structinode__s">inode_s</link>{
87 &#32;&#32;<emphasis role="comment">//&#32;type&#32;file&#32;vs&#32;dir</emphasis>
88 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;filename[FILENAME_MAX_SIZE];&#32;<emphasis role="comment">//&#32;dont&#32;&apos;\0&apos;</emphasis>
89 &#32;&#32;uint&#32;size;&#32;<emphasis role="comment">//&#32;du&#32;fichier&#32;en&#32;octets</emphasis>
90 &#32;&#32;uint&#32;uid;&#32;<emphasis role="comment">//user&#32;id&#32;proprio</emphasis>
91 &#32;&#32;uint&#32;uright;&#32;<emphasis role="comment">//owner&apos;s&#32;rights&#32;between&#32;0&#32;and&#32;3&#32;coding&#32;rw&#32;in&#32;binary</emphasis>
92 &#32;&#32;uint&#32;oright;&#32;<emphasis role="comment">//&#32;other&apos;s&#32;right&#32;idem</emphasis>
93 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;ctimestamp[TIMESTAMP_SIZE];&#32;<emphasis role="comment">//&#32;date&#32;creation&#32;:&#32;26&#32;octets</emphasis>
94 &#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;mtimestamp[TIMESTAMP_SIZE];&#32;<emphasis role="comment">//&#32;date&#32;dernière&#32;modif.&#32;:&#32;26&#32;octets</emphasis>
95 &#32;&#32;uint&#32;nblock;&#32;<emphasis role="comment">//&#32;nblock&#32;du&#32;fichier&#32;=&#32;(size+BLOCK_SIZE-1)/BLOCK_SIZE&#32;?</emphasis>
96 &#32;&#32;uint&#32;first_byte;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;the&#32;first&#32;byte&#32;on&#32;the&#32;virtual&#32;disk</emphasis>
97 }&#32;<link linkend="_structinode__s">inode_t</link>;
98 
99 <emphasis role="comment">/*&#32;Type&#32;of&#32;the&#32;inode&#32;table&#32;*/</emphasis>
100 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_structinode__s">inode_t</link>&#32;inode_table_t[INODE_TABLE_SIZE];<emphasis role="comment">//&#32;la&#32;taille&#32;est&#32;fixe</emphasis>
101 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_structuser__s">user_t</link>&#32;users_table_t[NB_USERS];&#32;<emphasis role="comment">//&#32;taille&#32;fixe.&#32;L&apos;indice&#32;est&#32;l&apos;uid.</emphasis>
102 
103 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structsuper__block__s">super_block_s</link>{
104 &#32;&#32;uint&#32;number_of_files;&#32;<emphasis role="comment">//&#32;dans&#32;super&#32;bloc</emphasis>
105 &#32;&#32;uint&#32;number_of_users;&#32;<emphasis role="comment">//&#32;idem</emphasis>
106 &#32;&#32;uint&#32;nb_blocks_used&#32;;&#32;<emphasis role="comment">//</emphasis>
107 &#32;&#32;uint&#32;first_free_byte;&#32;<emphasis role="comment">//&#32;premier&#32;octet&#32;libre</emphasis>
108 &#32;&#32;}&#32;<link linkend="_structsuper__block__s">super_block_t</link>;
109 
110 <emphasis role="comment">/*&#32;Type&#32;of&#32;the&#32;virtual&#32;disk&#32;system&#32;*/</emphasis>
111 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structvirtual__disk__s">virtual_disk_s</link>&#32;{
112 &#32;&#32;&#32;&#32;<link linkend="_structsuper__block__s">super_block_t</link>&#32;super_block;
113 &#32;&#32;&#32;&#32;users_table_t&#32;users_table[NB_USERS];&#32;<emphasis role="comment">//&#32;tableau</emphasis>
114 &#32;&#32;&#32;&#32;inode_table_t&#32;inodes[INODE_TABLE_SIZE];<emphasis role="comment">//&#32;tableau</emphasis>
115 &#32;&#32;&#32;&#32;FILE&#32;*storage;&#32;<emphasis role="comment">//fichier&#32;vdisk&#32;du&#32;système&#32;de&#32;fichiers</emphasis>
116 }&#32;<link linkend="_structvirtual__disk__s">virtual_disk_t</link>;
117 
118 <emphasis role="comment">//&#32;structure&#32;pour&#32;les&#32;fichiers</emphasis>
119 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structfile__s">file_s</link>{
120 &#32;&#32;uint&#32;size;&#32;<emphasis role="comment">//&#32;Size&#32;of&#32;file&#32;in&#32;bytes&#32;with&#32;pading&#32;ie&#32;compléter&#32;le&#32;dernier&#32;bloc&#32;avec&#32;des&#32;zéros</emphasis>
121 &#32;&#32;uchar&#32;data&#32;[MAX_FILE_SIZE]&#32;;&#32;<emphasis role="comment">//&#32;only&#32;text&#32;files</emphasis>
122 }&#32;<link linkend="_structfile__s">file_t</link>&#32;;
123 
124 <emphasis role="comment">//&#32;structure&#32;pour&#32;gérer&#32;les&#32;commandes&#32;de&#32;l&apos;interprète</emphasis>
125 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structcmd__s">cmd_s</link>{
126 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;**&#32;tabArgs;&#32;<emphasis role="comment">//&#32;tableau&#32;des&#32;arguments</emphasis>
127 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbArgs;&#32;<emphasis role="comment">//&#32;nombre&#32;d&apos;arguments</emphasis>
128 }&#32;<link linkend="_structcmd__s">cmd_t</link>;
129 
130 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__OS_DEFINES__</emphasis>
</programlisting></section>
