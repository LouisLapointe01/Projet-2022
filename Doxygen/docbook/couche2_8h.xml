<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_couche2_8h" xml:lang="fr">
<title>Référence du fichier C:/Users/omard/Desktop/Projet_S4_grand_final/couche2/couche2.h</title>
<indexterm><primary>C:/Users/omard/Desktop/Projet_S4_grand_final/couche2/couche2.h</primary></indexterm>
<para>

<para>Header des fonctions pour la 2ème couche. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;../global.h&quot;
#include &quot;../couche1/couche1.h&quot;
</programlisting><simplesect>
    <title>Fonctions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_couche2_8h_1a0ceb6122328aad608a3c9c11960c1f47">write_super_block</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Ecrit le superblock à la position 0 sur le disque d0. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1ab31b7169eaa5242d6fceca44d5f42572">read_super_block</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Lit le superblock sur le disque d0. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1a357cb52ccd1936a59458e1ea0af9e3f1">change_first_byte</link> (<link linkend="_structsuper__block__s">super_block_t</link> *super_block, unsigned int value)</para>

<para>Change la valeur du premier octet libre sur le superblock. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1ae9b93e4cf07390657b4fa2fc4aa850d2">print_super_block</link> (<link linkend="_structsuper__block__s">super_block_t</link> superblock)</para>

<para>Affichage du contenu du superblock. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1a01a3597c5b668bf8e371ffb149894c4e">read_inodes_table</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Lit la table d&apos;inodes du fichier d0 contenu dans la structure virtual_disk_t. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1a14db98ebf68bc90d5bae54bf0ea7b9e5">write_inodes_table</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Écrit sur la table d&apos;inodes du fichier d0 contenu dans la structure virtual_disk_t. </para>
</listitem>
            <listitem><para>unsigned int <link linkend="_couche2_8h_1a480ee137d116c25767764b082c5c7ee6">get_unused_inode</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Retourne l&apos;indice de la première inode disponible sur la table d&apos;inode. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1a209f552ae2327e8258b2f4d1d110e3c1">init_inode</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk, const char *filename, unsigned int size, unsigned int pos)</para>

<para>Initialise la table d&apos;inodes : nom, taille et position. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1a03fa7d0fec465925d3c928dcb52138e2">empty_inode</link> (<link linkend="_structinode__s">inode_t</link> *inode)</para>

<para>Vide l&apos;inode, valeurs à 0 et noms reinitialisés à &quot;&quot;. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1a45d3a09f4a911cfdc03beb3eec741919">delete_inode</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk, unsigned int indice)</para>

<para>Suppression de l&apos;inode positionnée à l&apos;indice indice. </para>
</listitem>
            <listitem><para><anchor xml:id="_couche2_8h_1ae5b029f6d3e7092017ac58429418c966"/>void <emphasis role="strong">cmd_dump_inode</emphasis> ()</para>

<para>Fonction de test de la seconde couche. </para>
</listitem>
            <listitem><para>void <link linkend="_couche2_8h_1ae2d5a98681d97602a8170f0be69d9101">create_empty_inode_table</link> (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> *virtual_disk)</para>

<para>Initialise la table d&apos;inode en vidant chacune des inodes. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Header des fonctions pour la 2ème couche. </para>

<para><formalpara><title>Auteur</title>

<para>Clément Payart, Louis Lapointe, Mael Schiemsky </para>
</formalpara>
<formalpara><title>Version</title>

<para>1 </para>
</formalpara>
<formalpara><title>Date</title>

<para>2022-05-15</para>
</formalpara>
<formalpara><title>Copyright</title>

<para>Copyright (c) 2022 </para>
</formalpara>
</para>
</section>
<section>
<title>Documentation des fonctions</title>
<anchor xml:id="_couche2_8h_1a357cb52ccd1936a59458e1ea0af9e3f1"/><section>
    <title>change_first_byte()</title>
<indexterm><primary>change_first_byte</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>change_first_byte</secondary></indexterm>
<para><computeroutput>void change_first_byte (<link linkend="_structsuper__block__s">super_block_t</link> * super_block, unsigned int value)</computeroutput></para><para>

<para>Change la valeur du premier octet libre sur le superblock. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>super_block</entry><entry>
<para>superblock modifié </para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>valeur à inserer dans le champ first_free_byte de super_block </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1ae2d5a98681d97602a8170f0be69d9101"/><section>
    <title>create_empty_inode_table()</title>
<indexterm><primary>create_empty_inode_table</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>create_empty_inode_table</secondary></indexterm>
<para><computeroutput>void create_empty_inode_table (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Initialise la table d&apos;inode en vidant chacune des inodes. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>structure contenant la table d&apos;inode à vider </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1a45d3a09f4a911cfdc03beb3eec741919"/><section>
    <title>delete_inode()</title>
<indexterm><primary>delete_inode</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>delete_inode</secondary></indexterm>
<para><computeroutput>void delete_inode (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk, unsigned int indice)</computeroutput></para><para>

<para>Suppression de l&apos;inode positionnée à l&apos;indice indice. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>structure contenant l&apos;inode à supprimer </para>
</entry>
                            </row>
                            <row>
<entry>indice</entry><entry>
<para>indice de l&apos;inode à supprimer </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1a03fa7d0fec465925d3c928dcb52138e2"/><section>
    <title>empty_inode()</title>
<indexterm><primary>empty_inode</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>empty_inode</secondary></indexterm>
<para><computeroutput>void empty_inode (<link linkend="_structinode__s">inode_t</link> * inode)</computeroutput></para><para>

<para>Vide l&apos;inode, valeurs à 0 et noms reinitialisés à &quot;&quot;. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>inode</entry><entry>
<para>inode remis à zéro </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1a480ee137d116c25767764b082c5c7ee6"/><section>
    <title>get_unused_inode()</title>
<indexterm><primary>get_unused_inode</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>get_unused_inode</secondary></indexterm>
<para><computeroutput>unsigned int get_unused_inode (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Retourne l&apos;indice de la première inode disponible sur la table d&apos;inode. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>disque contenant la table d&apos;inodes </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>Indice de la table d&apos;inode </para>
</formalpara>
</para>
</section>
<anchor xml:id="_couche2_8h_1a209f552ae2327e8258b2f4d1d110e3c1"/><section>
    <title>init_inode()</title>
<indexterm><primary>init_inode</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>init_inode</secondary></indexterm>
<para><computeroutput>void init_inode (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk, const char * filename, unsigned int size, unsigned int pos)</computeroutput></para><para>

<para>Initialise la table d&apos;inodes : nom, taille et position. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>structure contenant l&apos;inode à initialiser </para>
</entry>
                            </row>
                            <row>
<entry>filename</entry><entry>
<para>nom du ficher </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>taille du fichier </para>
</entry>
                            </row>
                            <row>
<entry>pos</entry><entry>
<para>position du fichier </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1ae9b93e4cf07390657b4fa2fc4aa850d2"/><section>
    <title>print_super_block()</title>
<indexterm><primary>print_super_block</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>print_super_block</secondary></indexterm>
<para><computeroutput>void print_super_block (<link linkend="_structsuper__block__s">super_block_t</link> superblock)</computeroutput></para><para>

<para>Affichage du contenu du superblock. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>superblock</entry><entry>
<para>Superblock affiché </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1a01a3597c5b668bf8e371ffb149894c4e"/><section>
    <title>read_inodes_table()</title>
<indexterm><primary>read_inodes_table</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>read_inodes_table</secondary></indexterm>
<para><computeroutput>void read_inodes_table (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Lit la table d&apos;inodes du fichier d0 contenu dans la structure virtual_disk_t. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>structure contenant le fichier d0 et la table d&apos;inodes </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1ab31b7169eaa5242d6fceca44d5f42572"/><section>
    <title>read_super_block()</title>
<indexterm><primary>read_super_block</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>read_super_block</secondary></indexterm>
<para><computeroutput>void read_super_block (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Lit le superblock sur le disque d0. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>Structure disque contenant le superblock à lire et l&apos;accès au fichier d0 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1a14db98ebf68bc90d5bae54bf0ea7b9e5"/><section>
    <title>write_inodes_table()</title>
<indexterm><primary>write_inodes_table</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>write_inodes_table</secondary></indexterm>
<para><computeroutput>void write_inodes_table (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Écrit sur la table d&apos;inodes du fichier d0 contenu dans la structure virtual_disk_t. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>structure contenant le fichier d0 et la table d&apos;inodes </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_couche2_8h_1a0ceb6122328aad608a3c9c11960c1f47"/><section>
    <title>write_super_block()</title>
<indexterm><primary>write_super_block</primary><secondary>couche2.h</secondary></indexterm>
<indexterm><primary>couche2.h</primary><secondary>write_super_block</secondary></indexterm>
<para><computeroutput>void write_super_block (<link linkend="_structvirtual__disk__s">virtual_disk_t</link> * virtual_disk)</computeroutput></para><para>

<para>Ecrit le superblock à la position 0 sur le disque d0. </para>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>virtual_disk</entry><entry>
<para>Structure disque contenant le superblock à écrire et l&apos;accès au fichier d0 </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
